version: '3.8'

services:
  frontend:
    build: .
    ports:
      - "3666:8080"
    env_file:
      - .env
    depends_on:
      - kong
    restart: unless-stopped

  db:
    image: supabase/postgres:15.1.0.118
    restart: always
    volumes:
      - ./supabase/volumes/db:/var/lib/postgresql/data
    env_file:
      - ./supabase/db.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-h", "localhost", "-p", "5432" ]
      interval: 5s
      timeout: 5s
      retries: 5

  kong:
    image: kong:2.8.1
    restart: always
    ports:
      - "8000:8000"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/var/lib/kong/kong.yml"
      KONG_DNS_ORDER: "LAST,A,CNAME"
      KONG_PLUGINS: "request-transformer,cors,key-auth"
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml
    depends_on:
      - auth
      - rest
      - realtime
      - storage
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10

  auth:
    image: ghcr.io/supabase/gotrue:v2.141.2
    restart: always
    env_file:
      - ./supabase/auth.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--spider", "http://localhost:9999/health" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rest:
    image: postgrest/postgrest:v11.2.0
    restart: always
    env_file:
      - ./supabase/rest.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--spider", "http://localhost:3000/" ]
      interval: 5s
      timeout: 5s
      retries: 5

  realtime:
    image: ghcr.io/supabase/realtime:v2.25.3
    restart: always
    env_file:
      - ./supabase/realtime.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--spider", "http://localhost:4000/health" ]
      interval: 5s
      timeout: 5s
      retries: 5

  storage:
    image: ghcr.io/supabase/storage-api:v0.41.6
    restart: always
    env_file:
      - ./supabase/storage.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--spider", "http://localhost:5000/status" ]
      interval: 5s
      timeout: 5s
      retries: 5

  studio:
    image: ghcr.io/supabase/studio:latest
    restart: always
    ports:
      - "8082:8082"
    env_file:
      - ./supabase/studio.env
    depends_on:
      db:
        condition: service_healthy
      rest:
        condition: service_healthy

volumes:
  db: